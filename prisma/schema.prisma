// generator client {
//   provider = "prisma-client-js"
//   output   = "../generated/prisma"
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AssetStatus {
  ACTIVE
  IN_MAINTENANCE
  DECOMMISSIONED
  LOST
}

enum AssetClass {
  COMPUTER
  PRINTER
  SCANNER
  LAMINATOR
  ROUTER
  SWITCH
  SERVER
  FURNITURE
  OTHER
}

// model Assets {
//   id             String      @id @default(uuid())
//   assetTag       String      @unique
//   class          AssetClass
//   status         AssetStatus @default(ACTIVE)
//   model          String
//   manufacturer   String
//   serialNumber   String      @unique
//   purchaseDate   DateTime?
//   purchasePrice  Decimal?
//   warrantyExpiry DateTime?
//   location       String?
//   assignedTo     String?
//   notes          String?

//   // Computer-specific fields
//   cpu     String?
//   ram     String?
//   storage String?
//   os      String?

//   // Network equipment fields
//   ports      Int?
//   macAddress String?
//   ipAddress  String?

//   // Printer/Scanner specific
//   consumables String?
//   resolution  String?

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@index([assetTag])
//   @@index([serialNumber])
//   @@index([class])
// }

model User {
  id         String    @id @default(uuid())
  fullname   String
  email      String    @unique
  password   String
  username   String
  contact    String
  department String
  profile    String?
  isActive   Boolean   @default(false)
  token      String?   @unique
  tokenExp   DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([email])
  @@index([contact])
  @@index([department])
}


model Asset {
  id          String     @id @default(uuid())
  category    String
  type        String
  subType     String?
  name        String
  serialNo    String? 
  details     Json?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([serialNo], name: "asset_serialNo_unique")
}
model Receiving {
  id           String   @id @default(uuid())
  manufacturer String
  vendor       String
  serialNumber String
  model        String
  type         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Allocation {
  id             String   @id @default(uuid())
  userDepartment String
  unit           String
  serialNumber   String
  username       String
  roomNumber     String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Transfer {
  id             String   @id @default(uuid())
  userTransferTo String
  serialNumber   String
  transferDate   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model SystemAudit {
  id           String   @id @default(uuid())
  serialNumber String
  status       String
  remarks      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Decommission {
  id        String   @id @default(uuid())
  dateOfDec String
  reason    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Disposal {
  id             String   @id @default(uuid())
  userTransferTo String
  transferDate   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Achieve {
  id           String   @id @default(uuid())
  serialNumber String
  years        DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Device {
  id           String   @id @default(uuid())
  serialNumber String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Block {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
